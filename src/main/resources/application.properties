# APPLICATION
quarkus.application-name=oreillymastermongodb
# MONGO DATABASE
quarkus.mongodb.database=oreillylearning
quarkus.mongodb.health.enabled=true
quarkus.mongodb.metrics.enabled=true
quarkus.mongodb.tracing.enabled=true
quarkus.mongodb.application-name=mongodblearn
# REST CLIENT
quarkus.rest-client.mongo-data-api.url=https://ap-south-1.aws.data.mongodb-api.com
quarkus.rest-client.mongo-data-api.scope=jakarta.inject.ApplicationScoped
quarkus.rest-client.mongo-data-api.verify-host=false
quarkus.rest-client.alpn=true
# LOGGING
quarkus.rest-client.logging.scope=request-response
quarkus.rest-client.logging.body-limit=50
quarkus.log.category."org.jboss.resteasy.reactive.client.logging".level=DEBUG
# QUARKUS HTTP
quarkus.http.cors=true
quarkus.http.cors.origins=/.*/
# INSTRUMENTATION
quarkus.live-reload.instrumentation=true
# SWAGGER / OPEN API
quarkus.smallrye-openapi.info-title=Doogle Mongo API
quarkus.smallrye-openapi.info-version=1.0.1
quarkus.smallrye-openapi.info-description=OREILLY MONGO DB LEARN
quarkus.smallrye-openapi.info-terms-of-service=OPEN TO USE AND KEEP READING AS ALWAYS
quarkus.smallrye-openapi.info-contact-email=debabrata_patnaik@live.com
quarkus.smallrye-openapi.info-contact-name=Debabrata Patnaik
quarkus.smallrye-openapi.info-contact-url=https://github.com/debu999
quarkus.smallrye-openapi.info-license-name=Apache 2.0
quarkus.smallrye-openapi.info-license-url=https://www.apache.org/licenses/LICENSE-2.0.html
quarkus.smallrye-openapi.operation-id-strategy=package-class-method
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.theme=material
#original, feeling-blue, flattop, material, monokai, muted, newspaper, outline
quarkus.swagger-ui.footer=Mongo DB APIs by Debabrata Patnaik
quarkus.swagger-ui.deep-linking=true
quarkus.swagger-ui.display-operation-id=true
quarkus.swagger-ui.display-request-duration=true
quarkus.swagger-ui.filter=true
quarkus.swagger-ui.operations-sorter=alpha
quarkus.swagger-ui.show-extensions=true
quarkus.swagger-ui.show-common-extensions=true
quarkus.swagger-ui.tags-sorter=alpha
quarkus.swagger-ui.with-credentials=true
quarkus.swagger-ui.persist-authorization=true
# GRAPHQL
quarkus.smallrye-graphql.ui.always-include=true
quarkus.smallrye-graphql.federation.enabled=true
quarkus.smallrye-graphql.metrics.enabled=true
quarkus.smallrye-graphql.tracing.enabled=true
quarkus.smallrye-graphql.events.enabled=true
quarkus.smallrye-graphql.error-extension-fields=[exception, classification, code, description, validationErrorType, queryPath]
quarkus.smallrye-graphql.print-data-fetcher-exception=true
quarkus.smallrye-graphql.schema-include-scalars=true
quarkus.smallrye-graphql.schema-include-schema-definition=true
quarkus.smallrye-graphql.schema-include-directives=true
quarkus.smallrye-graphql.schema-include-introspection-types=true
quarkus.smallrye-graphql.log-payload=queryAndVariables
# GRAPHQL CLIENT
# Vert.x
quarkus.vertx.warning-exception-time=10S
quarkus.vertx.max-event-loop-execute-time=10S
# DEBEZIUM MONGO CHANGE STREAM
debezium.name=mongodb-connector
debezium.connector.class=io.debezium.connector.mongodb.MongoDbConnector
debezium.mongodb.connection.string=${quarkus.mongodb.connection-string}
debezium.mongodb.connection.mode=replica_set
debezium.topic.prefix=debezium
# debezium.monogdb.user= // Added in mongo connection string
#debezium.monogdb.password= // Added in mongo connection string
#debezium.mongodb.authsource=admin // default is admin
# // default is false
debezium.mongodb.ssl.enabled=true
debezium.mongodb.ssl.invalid.hostname.allowed=true
# An optional comma-separated list of regular expressions that match database names to be monitored. By default, all databases are monitored. When database.include.list is set, the connector monitors only the databases that the property specifies.
debezium.database.include.list=${quarkus.mongodb.database}
#debezium.database.exclude.list= set only if database.include.list is not set both do not work.
debezium.collection.include.list=oreillylearning.bulkCollection,oreillylearning.bookOrders
#debezium.collection.exclude.list= // Collection identifiers are of the form databaseName.collectionName. do not use if collection.include.list is set.
# initial - When the connector starts, if it does not detect a value in its offsets topic, it performs a snapshot of the database.
# never -  When the connector starts, it skips the snapshot process and immediately begins to stream change events for operations that the database records to the oplog.
debezium.snapshot.mode=initial
# default change_streams_update_full but we can also use change_streams / change_streams_update_full_with_pre_image / change_streams_with_pre_image
debezium.capture.mode=change_streams_update_full_with_pre_image
#debezium.snapshot.include.collection.list= All collections specified in collection.include.list
#debezium.field.exclude.list= // Fully-qualified names for fields are of the form databaseName.collectionName.fieldName.nestedFieldName, where databaseName and collectionName may contain the wildcard (*) which matches any characters.
#debezium.field.renames=// Fully-qualified replacements for fields are of the form databaseName.collectionName.fieldName.nestedFieldName:newNestedFieldName, where databaseName and collectionName may contain the wildcard (*) which matches any characters, the colon character (:) is used to determine rename mapping of field.
# default 1 good for replica set for sharded db it should be more than no. of shards.
debezium.tasks.max=1
# Positive integer value that specifies the maximum number of threads used to perform an initial sync of the collections in a replica set. Defaults to 1.
debezium.snapshot.max.threads=1
# default true delete operation is represented by a delete event and a subsequent tombstone event. After a source record is deleted, emitting a tombstone event (the default behavior) allows Kafka to completely delete all events that pertain to the key of the deleted row in case log compaction is enabled for the topic.
debezium.tombstones.on.delete=true
# An interval in milliseconds that the connector should wait before taking a snapshot after starting up.
#debezium.snapshot.delay.ms=
# Default 0 so server choose an appropriate fetch size.
debezium.snapshot.fetch.size=0
# none is default
# avro replaces the characters that cannot be used in the Avro type name with underscore.
# avro_unicode replaces the underscore or characters that cannot be used in the Avro type name with corresponding unicode like _uxxxx. Note: _ is an escape sequence like backslash in Java
debezium.schema.name.adjustment.mode=avro
# same as schema.name.adjustment.mode
debezium.field.name.adjustment.mode=avro
# not needed as we added connection string deprecated
#debezium.mongodb.hosts=
debezium.skipped.operations=none
debezium.offset.storage=org.apache.kafka.connect.storage.KafkaOffsetBackingStore
debezium.offset.storage.topic=debezium-offset-storage
debezium.group.id=doogle-debezium-offset-storage-consumer-group
debezium.key.converter=org.apache.kafka.connect.json.JsonConverter
debezium.value.converter=org.apache.kafka.connect.json.JsonConverter
debezium.bootstrap.servers=${kafka.bootstrap.servers}
debezium.offset.flush.interval.ms=10000
debezium.offset.storage.partitions=1
debezium.offset.storage.replication.factor=1
debezium.mongodb.name=${quarkus.mongodb.database}
debezium.mongodb.members.auto.discover=true
debezium.connection.keep.alive=true
debezium.include.schema.changes=true
# KAFKA
quarkus.kafka.topic-partitions-timeout=10S
kafka.bootstrap.servers=localhost:52271, localhost:52273, localhost:52275
# LOGGING
quarkus.log.level=INFO
quarkus.log.min-level=INFO
quarkus.log.category."io.smallrye.graphql".level=TRACE
quarkus.log.category."io.smallrye.graphql".min-level=TRACE
quarkus.log.category."org.doogle".level=ALL
quarkus.log.category."org.doogle".min-level=ALL
quarkus.log.category."org.apache.kafka.connect".level=OFF
quarkus.log.category."org.apache.kafka.connect".min-level=OFF
quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p ${quarkus.application-name} traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId} [%c{3.}] (%t) %s%e%n
